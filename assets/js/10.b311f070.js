(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{203:function(t,e,s){"use strict";s.r(e);var a=s(6),r=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"fs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fs"}},[t._v("#")]),t._v(" fs")]),t._v(" "),e("ul",[e("li",[t._v("Dead simple (see examples), minimalistic")]),t._v(" "),e("li",[t._v("Provides both CLI and API (so you don't need 2 separate packages)")]),t._v(" "),e("li",[t._v("Provides Typescript typings (so you don't need 3 separate packages)")]),t._v(" "),e("li",[t._v("Relies on proven lower-level libs (globby, cp-file, yargs)")]),t._v(" "),e("li",[t._v("Report progress to STDOUT by default (unless "),e("code",[t._v("--silent")]),t._v(" is used)")])]),t._v(" "),e("p",[t._v("Just run "),e("code",[t._v("kpy help")]),t._v(" to see CLI options.")]),t._v(" "),e("h1",{attrs:{id:"api-commands"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#api-commands"}},[t._v("#")]),t._v(" API commands")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("kpy")]),t._v(" - copy/move files/folders")]),t._v(" "),e("li",[e("code",[t._v("del")]),t._v(" - delete files/folders")])]),t._v(" "),e("h1",{attrs:{id:"cli-api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cli-api"}},[t._v("#")]),t._v(" CLI API")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("\nkpy "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("baseDir"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("pattern"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("1")]),t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("pattern"),e("span",{pre:!0,attrs:{class:"token operator"}},[e("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[t._v("2")]),t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(". "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("outputDir"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Example, copy all from `test` to `out`:")]),t._v("\n\nkpy "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" out\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Example, copy all `*.txt` file from `test`, except `one.txt` to `out`:")]),t._v("\n\nkpy "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'**/*.txt'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'!**/one.txt'")]),t._v(" out\n\n")])])]),e("p",[t._v("Options:")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("--silent")]),t._v(" - don't output anything")]),t._v(" "),e("li",[e("code",[t._v("--verbose")]),t._v(" - report progress on every file")]),t._v(" "),e("li",[e("code",[t._v("--dotfiles")]),t._v(" - include files starting with "),e("code",[t._v(".")])]),t._v(" "),e("li",[e("code",[t._v("--no-overwrite")]),t._v(" - don't overwrite")]),t._v(" "),e("li",[e("code",[t._v("--flat")]),t._v(" - flatten the output folders")]),t._v(" "),e("li",[e("code",[t._v("--dry")]),t._v(" - don't copy (useful for debugging)")]),t._v(" "),e("li",[e("code",[t._v("--move")]),t._v(" - move files instead of copy")]),t._v(" "),e("li",[e("code",[t._v("help")]),t._v(" - show available options")])]),t._v(" "),e("h1",{attrs:{id:"why"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#why"}},[t._v("#")]),t._v(" Why")]),t._v(" "),e("p",[e("code",[t._v("cpy")]),t._v(" has issue with "),e("code",[t._v("--cwd")]),t._v(", "),e("code",[t._v("--parents")]),t._v(". "),e("code",[t._v("--parents")]),t._v(" should be default, and "),e("code",[t._v("cwd")]),t._v(" is confusing.")]),t._v(" "),e("p",[e("code",[t._v("cpx")]),t._v(" is amazing, but doesn't support multiple globs and therefore negation globs (e.g\n"),e("code",[t._v("test/* !test/one.txt")]),t._v(")")]),t._v(" "),e("h2",{attrs:{id:"example-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-1"}},[t._v("#")]),t._v(" Example 1")]),t._v(" "),e("p",[t._v("Copy all files/dirs while keeping directory structure from "),e("code",[t._v("test/*")]),t._v(" to "),e("code",[t._v("out")]),t._v(".")]),t._v(" "),e("p",[t._v("Simple, right?")]),t._v(" "),e("h4",{attrs:{id:"cpy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cpy"}},[t._v("#")]),t._v(" cpy")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("cpy ** ../out --cwd test --parent\n")])])]),e("p",[t._v("Possible, but not trivial to figure out "),e("code",[t._v("..out")]),t._v(", "),e("code",[t._v("--cwd")]),t._v(", etc.")]),t._v(" "),e("h4",{attrs:{id:"cpx"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cpx"}},[t._v("#")]),t._v(" cpx")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("cpx out test\n")])])]),e("p",[t._v("Works really well here!")]),t._v(" "),e("h2",{attrs:{id:"example-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#example-2"}},[t._v("#")]),t._v(" Example 2")]),t._v(" "),e("p",[t._v("Copy all files/dirs while keeping directory structure from "),e("code",[t._v("test/*.txt")]),t._v(" to "),e("code",[t._v("out")]),t._v(", excluding\n"),e("code",[t._v("one.txt")]),t._v(".")]),t._v(" "),e("p",[t._v("Simple, right?")]),t._v(" "),e("h4",{attrs:{id:"cpy-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cpy-2"}},[t._v("#")]),t._v(" cpy")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[t._v("cpy ** !**/one.txt ../out --cwd test --parent\n")])])]),e("p",[t._v("Possible, but not trivial to figure out "),e("code",[t._v("..out")]),t._v(", "),e("code",[t._v("--cwd")]),t._v(", etc.")]),t._v(" "),e("h4",{attrs:{id:"cpx-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cpx-2"}},[t._v("#")]),t._v(" cpx")]),t._v(" "),e("p",[t._v("Not possible to exclude ðŸ˜¦")]),t._v(" "),e("h1",{attrs:{id:"del"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#del"}},[t._v("#")]),t._v(" del")]),t._v(" "),e("p",[t._v("This package also provides "),e("code",[t._v("del")]),t._v(" cli (api similar and inspired by\n"),e("a",{attrs:{href:"https://github.com/sindresorhus/del",target:"_blank",rel:"noopener noreferrer"}},[t._v("del"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("p",[t._v("Examples:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Delete everything under `dist`, including `dist`:")]),t._v("\ndel dist\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Delete everything under `dist`, NOT including `dist` (important to quote globs!):")]),t._v("\ndel "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dist/**'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Delete all .json files under `dist`:")]),t._v("\ndel "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dist/**/*.json'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Delete all, but .json files under `dist`:")]),t._v("\ndel dist "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'!**/*.json'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Delete folders `a`, `b` and `c`:")]),t._v("\ndel a b c\n\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);